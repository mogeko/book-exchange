name: Release

on:
  push:
    branches: ["master"]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  relsease:
    name: Create PR or Publish to NPM
    runs-on: ubuntu-latest
    env:
      POSTGRES_URL_NON_POOLING: "postgresql://postgres:password@localhost:5432/prisma?schema=public"
      POSTGRES_PRISMA_URL: "postgresql://postgres:password@localhost:5432/prisma?schema=public"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: prisma
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Set up pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"
      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //npm.pkg.github.com/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm install -rw
      - run: pnpm run db:migrate
      - run: pnpm run build
      - name: Create Version PR or Publish to NPM
        id: changesets
        uses: changesets/action@v1.4.5
        with:
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
          version: node .github/changeset-version.cjs
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: "production"
